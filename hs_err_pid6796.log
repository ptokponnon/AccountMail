#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 32744 bytes. Error detail: Chunk::new
# Possible reasons:
#   The system is out of physical RAM or swap space
#   This process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (arena.cpp:150), pid=6796, tid=4852
#
# JRE version: Java(TM) SE Runtime Environment (22.0.2+9) (build 22.0.2+9-70)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (22.0.2+9-70, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: -XX:+ShowCodeDetailsInExceptionMessages Connect -n 10 -i 0 -c benin

Host: AMD EPYC 7B13, 2 cores, 7G,  Windows 10 , 64 bit Build 19041 (10.0.19041.5794)
Time: Mon May 26 19:10:27 2025 Temps universel coordonné elapsed time: 14111.026859 seconds (0d 3h 55m 11s)

---------------  T H R E A D  ---------------

Current thread (0x000001be973e03c0):  JavaThread "C1 CompilerThread0" daemon [_thread_in_native, id=4852, stack(0x000000a65c600000,0x000000a65c700000) (1024K)]


Current CompileTask:
C1:14111027  734       3       java.lang.String::getChars (55 bytes)

Stack: [0x000000a65c600000,0x000000a65c700000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x6e26e9]